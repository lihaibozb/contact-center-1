logging:
  level:
    root: info

server:
  port: 8806

spring:
  application:
    name: dispatching-center
  cloud:
    inetutils:
      ignored-interfaces:
        - eth*
      preferred-networks:
        - 192.168.*
    consul:
      host: 192.168.50.108
      port: 80
      discovery:
        prefer-ip-address: true
        instanceId: ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${server.port}}}
        # health-check-url: http://${spring.cloud.client.ip-address}:${server.port}/actuator/health
    loadbalancer:
      ribbon:
        enabled: false

  data:
    cassandra:
      contact-points: [192.168.50.111:9042]
      keyspace-name: message
      username: cassandra
      password: 4ge4CxwcFW
      local-datacenter: datacenter1
      schema-action: create_if_not_exists
  r2dbc:
    url: r2dbc:postgresql://192.168.50.102:5432/postgres?currentSchema=dispathcer
    username: postgres
    password: JpESiz1nHf
    pool:
      enabled: true

  redis:
    database: 0
    host: 192.168.50.103
    port: 6379
    password: G!Ps&eEwtsxd7NGf
    timeout: 5000

  security:
    oauth2:
      client:
        provider:
          authProvider:
            token-uri: http://oauth2-auth-server/oauth/token
        registration:
          authProvider:
            client-id: inner_client
            client-secret: test_secret
            authorization-grant-type: client_credentials